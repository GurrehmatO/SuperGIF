{"version":3,"sources":["serviceWorker.js","Styles/themeConfig.js","Styles/header.style.js","utils.js","Components/Header.js","Constants/strings.js","Constants/apiConstants.js","Components/TrendsPicker.js","Styles/trends.style.js","Components/HomePage.js","Styles/HomePage.style.js","Actions/trends_actions.js","Constants/actionTypes.js","Actions/gifList_actions.js","Constants/numeric.js","routes.js","Reducers/gifList_reducer.js","Reducers/trendsList_reducer.js","Reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","typography","fontFamily","join","palette","primary","main","header","backgroundColor","display","flexDirection","alignItems","title","fontSize","color","fontWeight","margin","transition","titleShrunk","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","makeQueryString","params","Object","keys","map","key","encodeURIComponent","useStyles","makeStyles","styles","Header","classes","scrolled","useScrollTrigger","disableHysteresis","threshold","showShadow","AppBar","position","className","elevation","Typography","clsx","API_KEY","ENDPOINTS","search","trending","trends","theme","trendsContainer","background","overflowX","breakpoints","up","flexWrap","justifyContent","chip","marginLeft","marginBottom","selectedChip","border","TrendsPicker","props","useSelector","store","selectedTrend","setTrend","moveUp","style","top","list","trend","Chip","label","icon","undefined","onClick","clickable","root","width","minHeight","masonryContainer","masonry","column","minWidth","marginRight","flexGrow","brick","listImage","borderRadius","loader","invisible","opacity","HomePage","gifList","dispatch","useDispatch","pageNum","setPage","BottomBorderRef","useRef","scrollRef","scrollObserver","useCallback","node","IntersectionObserver","entries","forEach","en","intersectionRatio","p","observe","current","useInfiniteScroll","isClient","getSize","innerWidth","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","columnCount","Math","floor","columns","useMemo","heightPath","Array","fill","push","imageData","minHeightIndex","reduce","acc","curr","colIndex","imageHeight","parseInt","get","makeImageColumns","paramsWithKey","api_key","request","Axios","type","then","data","payload","getTrendsList","endpointKey","getGifList","limit","offset","q","id","alt","src","images","fixed_width_small","url","CircularProgress","ref","loading","Routes","basename","process","exact","path","component","INITIAL_STATE","pagination","gifListReducer","state","action","trendsReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combinedReducer","applyMiddleware","thunk","createMuiTheme","themeConfig","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff0bdf62.chunk.js","sourcesContent":["/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  typography: {\n    fontFamily: [\n      \"Zilla Slab\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n  palette: {\n    primary: { main: \"#95C9FF\" },\n  },\n};\n","export default {\n  header: {\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 48,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    margin: 12,\n    transition: \"0.2s\",\n  },\n  titleShrunk: {\n    fontSize: 32,\n  },\n};\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { get } from \"lodash\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  );\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport const makeQueryString = (params) =>\r\n  Object.keys(params)\r\n    .map(\r\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\r\n    )\r\n    .join(\"&\");\r\n\r\nexport const useInfiniteScroll = (scrollRef, threshold, setPage) => {\r\n  const scrollObserver = useCallback(\r\n    (node) => {\r\n      new IntersectionObserver((entries) => {\r\n        entries.forEach((en) => {\r\n          if (en.intersectionRatio > threshold) {\r\n            setPage((p) => p + 1);\r\n          }\r\n        });\r\n      }).observe(node);\r\n    },\r\n    [setPage, threshold]\r\n  );\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollObserver(scrollRef.current);\r\n    }\r\n  }, [scrollObserver, scrollRef]);\r\n};\r\n\r\nexport const makeImageColumns = (list, heightPath, columnCount) => {\r\n  const columns = [];\r\n  Array(columnCount)\r\n    .fill()\r\n    .forEach(() => {\r\n      columns.push({ height: 0, list: [] });\r\n    });\r\n  list.forEach((imageData) => {\r\n    // find index of column with least net height\r\n    const minHeightIndex = columns.reduce(\r\n      (acc, curr, colIndex) =>\r\n        curr.height < columns[acc].height ? colIndex : acc,\r\n      0\r\n    );\r\n    // push current image into selected column\r\n    columns[minHeightIndex].list.push(imageData);\r\n    // add current image height to selected column's net height\r\n    const imageHeight = parseInt(get(imageData, heightPath, 200), 10);\r\n    columns[minHeightIndex].height += imageHeight;\r\n  });\r\n  return columns;\r\n};\r\n\r\nexport const useWindowSize = () => {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n    // eslint-disable-next-line\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n};\r\n","import React from \"react\";\nimport { AppBar, Typography, useScrollTrigger } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport styles from \"../Styles/header.style\";\nimport { SUPER_GIF } from \"../Constants/strings\";\nimport { useDebounce } from \"../utils\";\n\nconst useStyles = makeStyles(styles);\n\nconst Header = () => {\n  const classes = useStyles(styles);\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const showShadow = useDebounce(scrolled, 125);\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.header}\n      elevation={showShadow ? 6 : 0}\n    >\n      <Typography\n        className={clsx(classes.title, showShadow && classes.titleShrunk)}\n      >\n        {SUPER_GIF}\n      </Typography>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","export const SUPER_GIF = \"Super GIF\";\nexport const a = \"\";\n","export const API_KEY = \"EBwOiGqfDkDOzuwUQGL0sjsV2lP0rjI7\";\nexport const BASE_URL = \"https://api.giphy.com/v1\";\nexport const ENDPOINTS = {\n  search: \"/gifs/search\",\n  trending: \"/gifs/trending\",\n  trends: \"/trending/searches\",\n};\n","import React from \"react\";\r\nimport { AppBar, useScrollTrigger, Chip } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport clsx from \"clsx\";\r\nimport { useDebounce } from \"../utils\";\r\nimport styles from \"../Styles/trends.style\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst TrendsPicker = (props) => {\r\n  const classes = useStyles();\r\n  const trends = useSelector((store) => store.trends);\r\n  const { selectedTrend, setTrend } = props;\r\n  const scrolled = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n  const moveUp = useDebounce(scrolled, 125);\r\n  return (\r\n    <AppBar\r\n      className={classes.trendsContainer}\r\n      elevation={0}\r\n      position=\"sticky\"\r\n      style={{ top: moveUp ? 71 : 96 }}\r\n    >\r\n      {[\"Trending\", ...trends.list].map((trend) => (\r\n        <Chip\r\n          label={trend}\r\n          icon={trend === \"Trending\" ? <TrendingUpIcon /> : undefined}\r\n          key={trend}\r\n          onClick={() => setTrend(trend === \"Trending\" ? null : trend)}\r\n          clickable\r\n          className={clsx(\r\n            classes.chip,\r\n            (selectedTrend === trend ||\r\n              (selectedTrend === null && trend === \"Trending\")) &&\r\n              classes.selectedChip\r\n          )}\r\n          color=\"primary\"\r\n        />\r\n      ))}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TrendsPicker;\r\n","export default (theme) => ({\n  trendsContainer: {\n    transition: \"0.2s\",\n    background: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflowX: \"scroll\",\n    [theme.breakpoints.up(\"sm\")]: {\n      overflowX: \"unset\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    },\n  },\n  chip: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginLeft: 8,\n    fontWeight: \"800\",\n    marginBottom: 8,\n    fontSize: 16,\n  },\n  selectedChip: {\n    border: \"2px solid #1F4788\",\n    color: \"#1F4788\",\n  },\n});\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Img } from \"react-image\";\r\nimport clsx from \"clsx\";\r\nimport Header from \"./Header\";\r\nimport { useInfiniteScroll, makeImageColumns, useWindowSize } from \"../utils\";\r\nimport { getGifList, clearGifList } from \"../Actions/gifList_actions\";\r\nimport { getTrendsList } from \"../Actions/trends_actions\";\r\nimport { LIST_LIMIT } from \"../Constants/numeric\";\r\nimport styles from \"../Styles/HomePage.style\";\r\nimport TrendsPicker from \"./TrendsPicker\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst HomePage = () => {\r\n  const classes = useStyles();\r\n  const gifList = useSelector((store) => store.gifList);\r\n  const dispatch = useDispatch();\r\n  const [selectedTrend, setTrend] = useState(null);\r\n  const [pageNum, setPage] = useState(0);\r\n  const BottomBorderRef = useRef(null);\r\n  useInfiniteScroll(BottomBorderRef, 0, setPage);\r\n  const { width } = useWindowSize();\r\n  const columnCount = Math.floor((width * 0.9) / 162);\r\n  const columns = useMemo(\r\n    () =>\r\n      makeImageColumns(\r\n        gifList.list,\r\n        \"images.fixed_width_small.height\",\r\n        columnCount\r\n      ),\r\n    [gifList.list, columnCount]\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getTrendsList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearGifList());\r\n    setPage(0);\r\n  }, [dispatch, selectedTrend]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getGifList(selectedTrend ? \"search\" : \"trending\", {\r\n        limit: LIST_LIMIT,\r\n        offset: pageNum * LIST_LIMIT,\r\n        ...(selectedTrend && { q: selectedTrend }),\r\n      })\r\n    );\r\n  }, [dispatch, selectedTrend, pageNum]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <TrendsPicker selectedTrend={selectedTrend} setTrend={setTrend} />\r\n      <div className={classes.masonryContainer}>\r\n        <div className={classes.masonry}>\r\n          {columns.map((column) => (\r\n            <div className={classes.column}>\r\n              {column.list.map((imageData) => (\r\n                <div className={classes.brick} key={imageData.id}>\r\n                  <Img\r\n                    alt={imageData.id}\r\n                    className={classes.listImage}\r\n                    src={imageData.images.fixed_width_small.url}\r\n                    loader={\r\n                      <div\r\n                        style={{\r\n                          height:\r\n                            (imageData.images.fixed_width_small.height * 7) / 8,\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className={classes.listImage}\r\n                      >\r\n                        <CircularProgress />\r\n                      </div>\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <CircularProgress\r\n        ref={BottomBorderRef}\r\n        className={clsx(classes.loader, !gifList.loading && classes.invisible)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export default () => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    minHeight: \"calc(100vh - 96px)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  masonryContainer: {\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  masonry: {\r\n    width: \"90%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"stretch\",\r\n  },\r\n  column: {\r\n    minWidth: 150,\r\n    marginRight: 12,\r\n    flexGrow: 1,\r\n    \"&:last-child\": {\r\n      marginRight: \"unset\",\r\n    },\r\n  },\r\n  brick: {\r\n    margin: \"6px 0\",\r\n    width: \"100%\",\r\n  },\r\n  listImage: {\r\n    width: \"100%\",\r\n    borderRadius: 3,\r\n  },\r\n  loader: {\r\n    margin: \"0 auto\",\r\n  },\r\n  invisible: {\r\n    opacity: 1,\r\n  },\r\n});\r\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  TRENDS_LIST_LOADING,\n  TRENDS_LIST_RESPONSE,\n} from \"../Constants/actionTypes\";\n\nexport const getTrendsList = () => {\n  const paramsWithKey = {\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS.trends}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: TRENDS_LIST_LOADING });\n    request.then(({ data }) => {\n      dispatch({ type: TRENDS_LIST_RESPONSE, payload: data });\n    });\n  };\n};\n\nexport const a = \"\";\n","export const GIF_LIST_LOADING = \"GIF_LIST_LOADING\";\nexport const GIF_LIST_RESPONSE = \"GIF_LIST_RESPONSE\";\nexport const GIF_LIST_FAILURE = \"GIF_LIST_FAILURE\";\nexport const CLEAR_GIF_LIST = \"CLEAR_GIF_LIST\";\nexport const TRENDS_LIST_LOADING = \"TRENDS_LIST_LOADING\";\nexport const TRENDS_LIST_RESPONSE = \"TRENDS_LIST_RESPONSE\";\nexport const TRENDS_LIST_FAILURE = \"TRENDS_LIST_FAILURE\";\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  GIF_LIST_LOADING,\n  GIF_LIST_RESPONSE,\n  CLEAR_GIF_LIST,\n} from \"../Constants/actionTypes\";\n\nexport const getGifList = (endpointKey, params) => {\n  const paramsWithKey = {\n    ...params,\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS[endpointKey]}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: GIF_LIST_LOADING });\n    request.then(({ data }) => {\n      dispatch({ type: GIF_LIST_RESPONSE, payload: data });\n    });\n  };\n};\n\nexport const clearGifList = () => (dispatch) =>\n  dispatch({ type: CLEAR_GIF_LIST });\n","export const LIST_LIMIT = 10;\nexport const a = \"\";\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./Components/HomePage\";\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import {\n  GIF_LIST_LOADING,\n  GIF_LIST_RESPONSE,\n  CLEAR_GIF_LIST,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n  pagination: {},\n};\n\nconst gifListReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case GIF_LIST_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GIF_LIST_RESPONSE:\n      return {\n        loading: false,\n        list: [...state.list, ...payload.data],\n        pagination: payload.pagination,\n      };\n    case CLEAR_GIF_LIST:\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gifListReducer;\n","import {\n  TRENDS_LIST_LOADING,\n  TRENDS_LIST_RESPONSE,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n};\n\nconst trendsReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case TRENDS_LIST_LOADING:\n      return {\n        loading: true,\n        list: [],\n      };\n    case TRENDS_LIST_RESPONSE:\n      return {\n        loading: false,\n        list: payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trendsReducer;\n","import { combineReducers } from \"redux\";\nimport gifListReducer from \"./gifList_reducer\";\nimport trendsReducer from \"./trendsList_reducer\";\n\nexport default combineReducers({\n  gifList: gifListReducer,\n  trends: trendsReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport themeConfig from \"./Styles/themeConfig\";\nimport Routes from \"./routes\";\nimport combinedReducer from \"./Reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combinedReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nconst theme = createMuiTheme(themeConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}