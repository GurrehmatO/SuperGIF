{"version":3,"sources":["serviceWorker.js","Styles/themeConfig.js","Components/ListImage.js","Styles/header.style.js","Constants/strings.js","utils.js","Components/Header.js","Constants/apiConstants.js","Components/TrendsPicker.js","Styles/trends.style.js","Actions/autocomplete_actions.js","Constants/actionTypes.js","Components/SearchDialog.js","Styles/search.style.js","Components/HomePage.js","Styles/HomePage.style.js","Actions/trends_actions.js","Actions/gifList_actions.js","Constants/numeric.js","routes.js","Reducers/gifList_reducer.js","Reducers/trendsList_reducer.js","Reducers/autocomplete_reducer.js","Reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","typography","fontFamily","join","palette","primary","main","ListImage","props","classes","imageData","alt","id","className","listImage","src","images","fixed_width_downsampled","url","loader","style","height","width","display","flexDirection","alignItems","justifyContent","CircularProgress","header","backgroundColor","title","fontSize","color","fontWeight","margin","transition","titleShrunk","SEARCH","TRENDING","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","makeQueryString","params","Object","keys","map","key","encodeURIComponent","useStyles","makeStyles","styles","Header","scrolled","useScrollTrigger","disableHysteresis","threshold","showShadow","AppBar","position","elevation","Typography","clsx","API_KEY","BASE_URL","ENDPOINTS","search","trending","trends","autocomplete","theme","trendsContainer","background","overflowX","breakpoints","up","flexWrap","chip","marginLeft","marginBottom","boxShadow","selectedChip","border","searchChip","paddingLeft","TrendsPicker","useSelector","store","selectedTrend","setTrend","setSearch","searchLabel","moveUp","top","list","trend","Chip","label","icon","onClick","undefined","s","dialogOpen","searchMode","clickable","onDelete","getAutocompleteSuggestions","query","paramsWithKey","q","api_key","request","Axios","get","dispatch","type","then","data","payload","clearAutocomplete","dialog","searchField","minWidth","marginTop","suggestion","jfd","searchIcon","marginRight","SearchDialog","suggestions","useDispatch","config","debouncedKey","Dialog","open","onClose","DialogContent","onSubmit","e","preventDefault","Input","placeholder","variant","autoFocus","onChange","persist","target","endAdornment","IconButton","loading","size","List","name","option","ListItem","button","divider","root","minHeight","masonryContainer","masonry","column","flexGrow","brick","borderRadius","invisible","opacity","HomePage","gifList","pageNum","setPage","BottomBorderRef","useRef","scrollRef","scrollObserver","useCallback","node","IntersectionObserver","entries","forEach","en","intersectionRatio","p","observe","current","useInfiniteScroll","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","columnCount","Math","min","floor","columns","useMemo","heightPath","Array","fill","push","minHeightIndex","reduce","acc","curr","colIndex","imageHeight","parseInt","makeImageColumns","getTrendsList","endpointKey","getGifList","limit","offset","ref","Routes","basename","process","exact","path","component","INITIAL_STATE","pagination","gifListReducer","state","action","trendsReducer","autompleteReducer","combineReducers","autocompleteReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combinedReducer","applyMiddleware","thunk","createMuiTheme","themeConfig","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3595392.chunk.js","sourcesContent":["/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  typography: {\n    fontFamily: [\n      \"Zilla Slab\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n  palette: {\n    primary: { main: \"#95C9FF\" },\n  },\n};\n","import React from \"react\";\nimport { Img } from \"react-image\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst ListImage = (props) => {\n  const { classes, imageData } = props;\n  return (\n    <Img\n      alt={imageData.id}\n      className={classes.listImage}\n      src={imageData.images.fixed_width_downsampled.url}\n      loader={\n        <div\n          style={{\n            height: (imageData.images.fixed_width_downsampled.height * 5) / 4,\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          className={classes.listImage}\n        >\n          <CircularProgress />\n        </div>\n      }\n    />\n  );\n};\n\nexport default ListImage;\n","export default {\n  header: {\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 48,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    margin: 12,\n    transition: \"0.2s\",\n  },\n  titleShrunk: {\n    fontSize: 32,\n  },\n};\n","export const SUPER_GIF = \"Super GIF\";\nexport const SEARCH = \"Search\";\nexport const TRENDING = \"Trending\";\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { get } from \"lodash\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  );\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport const makeQueryString = (params) =>\r\n  Object.keys(params)\r\n    .map(\r\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\r\n    )\r\n    .join(\"&\");\r\n\r\nexport const useInfiniteScroll = (scrollRef, threshold, setPage) => {\r\n  const scrollObserver = useCallback(\r\n    (node) => {\r\n      new IntersectionObserver((entries) => {\r\n        entries.forEach((en) => {\r\n          if (en.intersectionRatio > threshold) {\r\n            setPage((p) => p + 1);\r\n          }\r\n        });\r\n      }).observe(node);\r\n    },\r\n    [setPage, threshold]\r\n  );\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollObserver(scrollRef.current);\r\n    }\r\n  }, [scrollObserver, scrollRef]);\r\n};\r\n\r\nexport const makeImageColumns = (list, heightPath, columnCount) => {\r\n  const columns = [];\r\n  Array(columnCount)\r\n    .fill()\r\n    .forEach(() => {\r\n      columns.push({ height: 0, list: [] });\r\n    });\r\n  list.forEach((imageData) => {\r\n    // find index of column with least net height\r\n    const minHeightIndex = columns.reduce(\r\n      (acc, curr, colIndex) =>\r\n        curr.height < columns[acc].height ? colIndex : acc,\r\n      0\r\n    );\r\n    // push current image into selected column\r\n    columns[minHeightIndex].list.push(imageData);\r\n    // add current image height to selected column's net height\r\n    const imageHeight = parseInt(get(imageData, heightPath, 200), 10);\r\n    columns[minHeightIndex].height += imageHeight;\r\n  });\r\n  return columns;\r\n};\r\n\r\nexport const useWindowSize = () => {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n    // eslint-disable-next-line\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n};\r\n","import React from \"react\";\nimport { AppBar, Typography, useScrollTrigger } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport styles from \"../Styles/header.style\";\nimport { SUPER_GIF } from \"../Constants/strings\";\nimport { useDebounce } from \"../utils\";\n\nconst useStyles = makeStyles(styles);\n\nconst Header = () => {\n  const classes = useStyles(styles);\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const showShadow = useDebounce(scrolled, 125);\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.header}\n      elevation={showShadow ? 6 : 0}\n    >\n      <Typography\n        className={clsx(classes.title, showShadow && classes.titleShrunk)}\n      >\n        {SUPER_GIF}\n      </Typography>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","export const API_KEY = \"EBwOiGqfDkDOzuwUQGL0sjsV2lP0rjI7\";\nexport const BASE_URL = \"https://api.giphy.com/v1\";\nexport const ENDPOINTS = {\n  search: \"/gifs/search\",\n  trending: \"/gifs/trending\",\n  trends: \"/trending/searches\",\n  autocomplete: \"/gifs/search/tags\",\n};\n","import React from \"react\";\nimport { AppBar, useScrollTrigger, Chip } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport clsx from \"clsx\";\nimport { useDebounce } from \"../utils\";\nimport styles from \"../Styles/trends.style\";\nimport { SEARCH, TRENDING } from \"../Constants/strings\";\n\nconst useStyles = makeStyles(styles);\n\nconst TrendsPicker = (props) => {\n  const classes = useStyles();\n  const trends = useSelector((store) => store.trends);\n  const { selectedTrend, setTrend, setSearch, searchLabel } = props;\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const moveUp = useDebounce(scrolled, 125);\n  return (\n    <AppBar\n      className={classes.trendsContainer}\n      elevation={0}\n      position=\"sticky\"\n      style={{ top: moveUp ? 71 : 96 }}\n    >\n      {[SEARCH, TRENDING, ...trends.list].map((trend) => (\n        <Chip\n          label={trend === SEARCH ? searchLabel : trend}\n          icon={(() => {\n            switch (trend) {\n              case SEARCH:\n                return <SearchIcon />;\n              case TRENDING:\n                return <TrendingUpIcon />;\n              default:\n                return undefined;\n            }\n          })()}\n          key={trend}\n          onClick={\n            trend === SEARCH && searchLabel\n              ? undefined\n              : () => {\n                  if (trend === SEARCH) {\n                    setSearch((s) => ({ ...s, dialogOpen: true }));\n                  } else {\n                    setTrend(trend === TRENDING ? null : trend);\n                    setSearch((s) => ({ ...s, searchMode: false }));\n                  }\n                }\n          }\n          clickable={!(trend === SEARCH && searchLabel)}\n          onDelete={\n            trend === SEARCH && !!searchLabel\n              ? () => {\n                  setSearch((s) => ({\n                    ...s,\n                    searchMode: false,\n                  }));\n                }\n              : undefined\n          }\n          className={clsx(\n            classes.chip,\n            (searchLabel\n              ? trend === SEARCH\n              : selectedTrend === trend ||\n                (selectedTrend === null && trend === TRENDING)) &&\n              classes.selectedChip,\n            trend === SEARCH && !searchLabel && classes.searchChip\n          )}\n          color=\"primary\"\n        />\n      ))}\n    </AppBar>\n  );\n};\n\nexport default TrendsPicker;\n","export default (theme) => ({\n  trendsContainer: {\n    transition: \"0.2s\",\n    background: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflowX: \"scroll\",\n    [theme.breakpoints.up(\"sm\")]: {\n      overflowX: \"unset\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    },\n  },\n  chip: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginLeft: 8,\n    fontWeight: \"800\",\n    marginBottom: 8,\n    fontSize: 16,\n    boxShadow:\n      \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12);\",\n  },\n  selectedChip: {\n    border: \"2px solid #1F4788\",\n    color: \"#1F4788\",\n  },\n  searchChip: {\n    \"& .MuiChip-label\": {\n      paddingLeft: \"unset\",\n    },\n  },\n});\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  AUTOCOMPLETE_LOADING,\n  AUTOCOMPLETE_RESPONSE,\n  CLEAR_AUTOCOMPLETE,\n} from \"../Constants/actionTypes\";\n\nexport const getAutocompleteSuggestions = (query) => {\n  const paramsWithKey = {\n    q: query,\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS.autocomplete}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: AUTOCOMPLETE_LOADING });\n    request.then(({ data }) => {\n      dispatch({\n        type: AUTOCOMPLETE_RESPONSE,\n        payload: { list: data.data, query },\n      });\n    });\n  };\n};\n\nexport const clearAutocomplete = () => (dispatch) =>\n  dispatch({ type: CLEAR_AUTOCOMPLETE });\n","export const GIF_LIST_LOADING = \"GIF_LIST_LOADING\";\nexport const GIF_LIST_RESPONSE = \"GIF_LIST_RESPONSE\";\nexport const GIF_LIST_FAILURE = \"GIF_LIST_FAILURE\";\nexport const CLEAR_GIF_LIST = \"CLEAR_GIF_LIST\";\nexport const TRENDS_LIST_LOADING = \"TRENDS_LIST_LOADING\";\nexport const TRENDS_LIST_RESPONSE = \"TRENDS_LIST_RESPONSE\";\nexport const TRENDS_LIST_FAILURE = \"TRENDS_LIST_FAILURE\";\nexport const AUTOCOMPLETE_LOADING = \"AUTOCOMPLETE_LOADING\";\nexport const AUTOCOMPLETE_RESPONSE = \"AUTOCOMPLETE_RESPONSE\";\nexport const AUTOCOMPLETE_FAILURE = \"AUTOCOMPLETE_FAILURE\";\nexport const CLEAR_AUTOCOMPLETE = \"CLEAR_AUTOCOMPLETE\";\n","import React, { useEffect } from \"react\";\nimport {\n  Dialog,\n  Input,\n  DialogContent,\n  CircularProgress,\n  List,\n  ListItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  getAutocompleteSuggestions,\n  clearAutocomplete,\n} from \"../Actions/autocomplete_actions\";\nimport { useDebounce } from \"../utils\";\n\nimport styles from \"../Styles/search.style\";\n\nconst useStyles = makeStyles(styles);\n\nconst SearchDialog = (props) => {\n  const classes = useStyles();\n  const suggestions = useSelector((store) => store.autocomplete);\n  const dispatch = useDispatch();\n  const { config, setSearch } = props;\n  const debouncedKey = useDebounce(config.key, 500);\n\n  useEffect(() => {\n    dispatch(\n      (debouncedKey === \"\" ? clearAutocomplete : getAutocompleteSuggestions)(\n        debouncedKey || undefined\n      )\n    );\n  }, [dispatch, debouncedKey]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearch((s) => ({\n      ...s,\n      dialogOpen: false,\n      searchMode: true,\n    }));\n  };\n  const onOptionClick = (option) => () => {\n    setSearch({\n      key: option,\n      dialogOpen: false,\n      searchMode: true,\n    });\n  };\n  return (\n    <Dialog\n      open={config.dialogOpen}\n      onClose={() =>\n        setSearch((s) => ({\n          ...s,\n          dialogOpen: false,\n        }))\n      }\n    >\n      <DialogContent className={classes.dialog}>\n        <form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search for GIFs\"\n            value={config.key}\n            variant=\"outlined\"\n            autoFocus\n            className={classes.searchField}\n            onChange={(e) => {\n              e.persist();\n              setSearch((s) => ({ ...s, key: e.target.value }));\n            }}\n            endAdornment={\n              <IconButton type=\"submit\">\n                <SearchIcon />\n              </IconButton>\n            }\n          />\n          {suggestions.loading ? (\n            <CircularProgress size={40} className={classes.loader} />\n          ) : null}\n          {config.key && suggestions.query === config.key && (\n            <List className={classes.list}>\n              {[{ name: config.key }, ...suggestions.list].map(({ name }) => (\n                <ListItem\n                  key={name}\n                  button\n                  divider\n                  onClick={onOptionClick(name)}\n                  className={classes.suggestion}\n                >\n                  <SearchIcon className={classes.searchIcon} />\n                  {name}\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default SearchDialog;\n","export default () => ({\n  dialog: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  searchField: {\n    width: \"100%\",\n    minWidth: 275,\n    fontWeight: \"bold\",\n  },\n  loader: {\n    marginTop: 16,\n  },\n  list: {\n    width: \"100%\",\n  },\n  suggestion: {\n    display: \"flex\",\n    jfd: \"row\",\n    alignItems: \"center\",\n  },\n  searchIcon: {\n    marginRight: 8,\n  },\n});\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport ListImage from \"./ListImage\";\nimport Header from \"./Header\";\nimport { useInfiniteScroll, makeImageColumns, useWindowSize } from \"../utils\";\nimport { getGifList, clearGifList } from \"../Actions/gifList_actions\";\nimport { getTrendsList } from \"../Actions/trends_actions\";\nimport { LIST_LIMIT } from \"../Constants/numeric\";\nimport styles from \"../Styles/HomePage.style\";\nimport TrendsPicker from \"./TrendsPicker\";\nimport SearchDialog from \"./SearchDialog\";\n\nconst useStyles = makeStyles(styles);\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  const gifList = useSelector((store) => store.gifList);\n  const dispatch = useDispatch();\n\n  const [selectedTrend, setTrend] = useState(null);\n  const [pageNum, setPage] = useState(0);\n\n  const BottomBorderRef = useRef(null);\n  useInfiniteScroll(BottomBorderRef, 0, setPage);\n\n  const { width } = useWindowSize();\n  // number of columns is floor value 90% of width divided by min column width, max value 6\n  const columnCount = Math.min(Math.floor((width * 0.9) / 162), 6);\n  const columns = useMemo(\n    () =>\n      makeImageColumns(\n        gifList.list,\n        \"images.fixed_width_downsampled.height\",\n        columnCount\n      ),\n    [gifList.list, columnCount]\n  );\n\n  const [search, setSearch] = useState({\n    key: \"\",\n    dialogOpen: false,\n    searchMode: false,\n  });\n\n  useEffect(() => {\n    dispatch(getTrendsList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(clearGifList());\n    setPage(0);\n  }, [dispatch, selectedTrend, search.searchMode]);\n\n  useEffect(() => {\n    dispatch(\n      getGifList(selectedTrend || search.searchMode ? \"search\" : \"trending\", {\n        limit: LIST_LIMIT,\n        offset: pageNum * LIST_LIMIT,\n        ...(selectedTrend && { q: selectedTrend }),\n        ...(search.searchMode && { q: search.key }),\n      })\n    );\n    // eslint-disable-next-line\n  }, [dispatch, selectedTrend, pageNum, search.searchMode]);\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <TrendsPicker\n        selectedTrend={selectedTrend}\n        setTrend={setTrend}\n        setSearch={setSearch}\n        searchLabel={search.searchMode ? search.key : \"\"}\n      />\n      <div className={classes.masonryContainer}>\n        <div className={classes.masonry}>\n          {columns.map((column) => (\n            <div className={classes.column}>\n              {column.list.map((imageData) => (\n                <div className={classes.brick} key={imageData.id}>\n                  <ListImage classes={classes} imageData={imageData} />\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      <CircularProgress\n        ref={BottomBorderRef}\n        className={clsx(classes.loader, !gifList.loading && classes.invisible)}\n      />\n      <SearchDialog config={search} setSearch={setSearch} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","export default () => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    minHeight: \"calc(100vh - 96px)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  masonryContainer: {\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  masonry: {\r\n    width: \"90%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"stretch\",\r\n  },\r\n  column: {\r\n    minWidth: 150,\r\n    marginRight: 12,\r\n    flexGrow: 1,\r\n    \"&:last-child\": {\r\n      marginRight: \"unset\",\r\n    },\r\n  },\r\n  brick: {\r\n    margin: \"6px 0\",\r\n    width: \"100%\",\r\n  },\r\n  listImage: {\r\n    width: \"100%\",\r\n    borderRadius: 3,\r\n  },\r\n  loader: {\r\n    margin: \"0 auto\",\r\n  },\r\n  invisible: {\r\n    opacity: 1,\r\n  },\r\n});\r\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  TRENDS_LIST_LOADING,\n  TRENDS_LIST_RESPONSE,\n} from \"../Constants/actionTypes\";\n\nexport const getTrendsList = () => {\n  const paramsWithKey = {\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS.trends}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: TRENDS_LIST_LOADING });\n    request.then(({ data }) => {\n      dispatch({ type: TRENDS_LIST_RESPONSE, payload: data });\n    });\n  };\n};\n\nexport const a = \"\";\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  GIF_LIST_LOADING,\n  GIF_LIST_RESPONSE,\n  CLEAR_GIF_LIST,\n} from \"../Constants/actionTypes\";\n\nexport const getGifList = (endpointKey, params) => {\n  const paramsWithKey = {\n    ...params,\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS[endpointKey]}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: GIF_LIST_LOADING });\n    request.then(({ data }) => {\n      dispatch({ type: GIF_LIST_RESPONSE, payload: data });\n    });\n  };\n};\n\nexport const clearGifList = () => (dispatch) =>\n  dispatch({ type: CLEAR_GIF_LIST });\n","export const LIST_LIMIT = 10;\nexport const a = \"\";\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./Components/HomePage\";\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import {\n  GIF_LIST_LOADING,\n  GIF_LIST_RESPONSE,\n  CLEAR_GIF_LIST,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n  pagination: {},\n};\n\nconst gifListReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case GIF_LIST_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GIF_LIST_RESPONSE:\n      return {\n        loading: false,\n        list: [...state.list, ...payload.data],\n        pagination: payload.pagination,\n      };\n    case CLEAR_GIF_LIST:\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gifListReducer;\n","import {\n  TRENDS_LIST_LOADING,\n  TRENDS_LIST_RESPONSE,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n};\n\nconst trendsReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case TRENDS_LIST_LOADING:\n      return {\n        loading: true,\n        list: [],\n      };\n    case TRENDS_LIST_RESPONSE:\n      return {\n        loading: false,\n        list: payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trendsReducer;\n","import {\n  AUTOCOMPLETE_LOADING,\n  AUTOCOMPLETE_RESPONSE,\n  CLEAR_AUTOCOMPLETE,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n  query: \"\",\n};\n\nconst autompleteReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case AUTOCOMPLETE_LOADING:\n      return {\n        ...state,\n        loading: true,\n        list: [],\n      };\n    case AUTOCOMPLETE_RESPONSE:\n      return {\n        loading: false,\n        list: payload.list,\n        query: payload.query,\n      };\n    case CLEAR_AUTOCOMPLETE:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default autompleteReducer;\n","import { combineReducers } from \"redux\";\nimport gifListReducer from \"./gifList_reducer\";\nimport trendsReducer from \"./trendsList_reducer\";\nimport autocompleteReducer from \"./autocomplete_reducer\";\n\nexport default combineReducers({\n  gifList: gifListReducer,\n  trends: trendsReducer,\n  autocomplete: autocompleteReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport themeConfig from \"./Styles/themeConfig\";\nimport Routes from \"./routes\";\nimport combinedReducer from \"./Reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combinedReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nconst theme = createMuiTheme(themeConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}