{"version":3,"sources":["serviceWorker.js","Styles/themeConfig.js","Components/ListImage.js","Styles/header.style.js","Constants/strings.js","utils.js","Components/Header.js","Constants/apiConstants.js","Components/TrendsPicker.js","Styles/trends.style.js","Actions/autocomplete_actions.js","Constants/actionTypes.js","Components/SearchDialog.js","Styles/search.style.js","Components/ImageDialog.js","Components/HomePage.js","Styles/HomePage.style.js","Actions/trends_actions.js","Actions/gifList_actions.js","Constants/numeric.js","routes.js","Reducers/gifList_reducer.js","Reducers/trendsList_reducer.js","Reducers/autocomplete_reducer.js","Reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","typography","fontFamily","join","palette","primary","main","ListImage","props","classes","imageData","setDialog","Button","style","padding","width","onClick","open","alt","id","className","listImage","src","images","fixed_width_downsampled","url","loader","height","CircularProgress","margin","header","backgroundColor","display","flexDirection","alignItems","title","fontSize","color","fontWeight","transition","titleShrunk","SEARCH","TRENDING","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","makeQueryString","params","Object","keys","map","key","encodeURIComponent","useStyles","makeStyles","styles","Header","scrolled","useScrollTrigger","disableHysteresis","threshold","showShadow","AppBar","position","elevation","Typography","clsx","API_KEY","BASE_URL","ENDPOINTS","search","trending","trends","autocomplete","theme","trendsContainer","background","overflowX","breakpoints","up","flexWrap","justifyContent","chip","marginLeft","marginBottom","boxShadow","selectedChip","border","searchChip","paddingLeft","TrendsPicker","useSelector","store","selectedTrend","setTrend","setSearch","searchLabel","moveUp","top","list","trend","Chip","label","icon","undefined","s","dialogOpen","searchMode","clickable","onDelete","getAutocompleteSuggestions","query","paramsWithKey","q","api_key","request","Axios","get","dispatch","type","then","data","payload","clearAutocomplete","dialog","searchField","minWidth","marginTop","suggestion","jfd","searchIcon","marginRight","SearchDialog","suggestions","useDispatch","config","debouncedKey","Dialog","onClose","DialogContent","onSubmit","e","preventDefault","Input","placeholder","variant","autoFocus","onChange","persist","target","endAdornment","IconButton","loading","size","List","name","option","ListItem","button","divider","ImageDialog","downloadDisabled","setDownloadDisable","original","dialogImage","DialogTitle","source_tld","DialogContentText","DialogActions","startIcon","disabled","split","method","responseType","response","FileDownload","root","minHeight","masonryContainer","masonry","column","flexGrow","brick","borderRadius","invisible","opacity","HomePage","gifList","pageNum","setPage","BottomBorderRef","useRef","scrollRef","scrollObserver","useCallback","node","IntersectionObserver","entries","forEach","en","intersectionRatio","p","observe","current","useInfiniteScroll","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","columnCount","Math","min","floor","columns","useMemo","heightPath","Array","fill","push","minHeightIndex","reduce","acc","curr","colIndex","imageHeight","parseInt","makeImageColumns","imageDialog","getTrendsList","endpointKey","getGifList","limit","offset","index","ref","Routes","basename","process","exact","path","component","INITIAL_STATE","pagination","gifListReducer","state","action","trendsReducer","autompleteReducer","combineReducers","autocompleteReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combinedReducer","applyMiddleware","thunk","createMuiTheme","themeConfig","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c0810a6.chunk.js","sourcesContent":["/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  typography: {\n    fontFamily: [\n      \"Zilla Slab\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n  palette: {\n    primary: { main: \"#95C9FF\" },\n  },\n};\n","import React from \"react\";\nimport { Img } from \"react-image\";\nimport { CircularProgress, Button } from \"@material-ui/core\";\n\nconst ListImage = (props) => {\n  const { classes, imageData, setDialog } = props;\n  return (\n    <Button\n      style={{ padding: 0, width: \"100%\" }}\n      onClick={() => setDialog({ imageData, open: true })}\n    >\n      <Img\n        alt={imageData.id}\n        className={classes.listImage}\n        src={imageData.images.fixed_width_downsampled.url}\n        loader={\n          <div\n            style={{\n              height: (imageData.images.fixed_width_downsampled.height * 7) / 8,\n              width: \"100%\",\n            }}\n            className={classes.listImage}\n          >\n            <CircularProgress style={{ margin: \"auto\" }} />\n          </div>\n        }\n      />\n    </Button>\n  );\n};\n\nexport default ListImage;\n","export default {\n  header: {\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 48,\n    color: \"#000\",\n    fontWeight: \"bold\",\n    margin: 12,\n    transition: \"0.2s\",\n  },\n  titleShrunk: {\n    fontSize: 32,\n  },\n};\n","export const SUPER_GIF = \"Super GIF\";\nexport const SEARCH = \"Search\";\nexport const TRENDING = \"Trending\";\nexport const SOURCE = \"Source\";\nexport const DOWNLOAD = \"Download\";\nexport const WHATSAPP = \"Share to Whatsapp\";\nexport const SEARCH_PLACEHOLDER = \"Search for GIFs\";\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { get } from \"lodash\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  );\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport const makeQueryString = (params) =>\r\n  Object.keys(params)\r\n    .map(\r\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\r\n    )\r\n    .join(\"&\");\r\n\r\nexport const useInfiniteScroll = (scrollRef, threshold, setPage) => {\r\n  const scrollObserver = useCallback(\r\n    (node) => {\r\n      new IntersectionObserver((entries) => {\r\n        entries.forEach((en) => {\r\n          if (en.intersectionRatio > threshold) {\r\n            setPage((p) => p + 1);\r\n          }\r\n        });\r\n      }).observe(node);\r\n    },\r\n    [setPage, threshold]\r\n  );\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollObserver(scrollRef.current);\r\n    }\r\n  }, [scrollObserver, scrollRef]);\r\n};\r\n\r\nexport const makeImageColumns = (list, heightPath, columnCount) => {\r\n  const columns = [];\r\n  Array(columnCount)\r\n    .fill()\r\n    .forEach(() => {\r\n      columns.push({ height: 0, list: [] });\r\n    });\r\n  list.forEach((imageData) => {\r\n    // find index of column with least net height\r\n    const minHeightIndex = columns.reduce(\r\n      (acc, curr, colIndex) =>\r\n        curr.height < columns[acc].height ? colIndex : acc,\r\n      0\r\n    );\r\n    // push current image into selected column\r\n    columns[minHeightIndex].list.push(imageData);\r\n    // add current image height to selected column's net height\r\n    const imageHeight = parseInt(get(imageData, heightPath, 200), 10);\r\n    columns[minHeightIndex].height += imageHeight;\r\n  });\r\n  return columns;\r\n};\r\n\r\nexport const useWindowSize = () => {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n    // eslint-disable-next-line\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n};\r\n","import React from \"react\";\nimport { AppBar, Typography, useScrollTrigger } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport styles from \"../Styles/header.style\";\nimport { SUPER_GIF } from \"../Constants/strings\";\nimport { useDebounce } from \"../utils\";\n\nconst useStyles = makeStyles(styles);\n\nconst Header = () => {\n  const classes = useStyles(styles);\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const showShadow = useDebounce(scrolled, 125);\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.header}\n      elevation={showShadow ? 6 : 0}\n    >\n      <Typography\n        className={clsx(classes.title, showShadow && classes.titleShrunk)}\n      >\n        {SUPER_GIF}\n      </Typography>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","export const API_KEY = \"EBwOiGqfDkDOzuwUQGL0sjsV2lP0rjI7\";\nexport const BASE_URL = \"https://api.giphy.com/v1\";\nexport const ENDPOINTS = {\n  search: \"/gifs/search\",\n  trending: \"/gifs/trending\",\n  trends: \"/trending/searches\",\n  autocomplete: \"/gifs/search/tags\",\n};\n","import React from \"react\";\nimport { AppBar, useScrollTrigger, Chip } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport clsx from \"clsx\";\nimport { useDebounce } from \"../utils\";\nimport styles from \"../Styles/trends.style\";\nimport { SEARCH, TRENDING } from \"../Constants/strings\";\n\nconst useStyles = makeStyles(styles);\n\nconst TrendsPicker = (props) => {\n  const classes = useStyles();\n  const trends = useSelector((store) => store.trends);\n  const { selectedTrend, setTrend, setSearch, searchLabel } = props;\n  const scrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n  const moveUp = useDebounce(scrolled, 125);\n  return (\n    <AppBar\n      className={classes.trendsContainer}\n      elevation={0}\n      position=\"sticky\"\n      style={{ top: moveUp ? 71 : 96 }}\n    >\n      {[SEARCH, TRENDING, ...trends.list].map((trend) => (\n        <Chip\n          label={trend === SEARCH ? searchLabel : trend}\n          icon={(() => {\n            switch (trend) {\n              case SEARCH:\n                return <SearchIcon />;\n              case TRENDING:\n                return <TrendingUpIcon />;\n              default:\n                return undefined;\n            }\n          })()}\n          key={trend}\n          onClick={\n            trend === SEARCH && searchLabel\n              ? undefined\n              : () => {\n                  if (trend === SEARCH) {\n                    setSearch((s) => ({ ...s, dialogOpen: true }));\n                  } else {\n                    setTrend(trend === TRENDING ? null : trend);\n                    setSearch((s) => ({ ...s, searchMode: false }));\n                  }\n                }\n          }\n          clickable={!(trend === SEARCH && searchLabel)}\n          onDelete={\n            trend === SEARCH && !!searchLabel\n              ? () => {\n                  setSearch((s) => ({\n                    ...s,\n                    searchMode: false,\n                  }));\n                }\n              : undefined\n          }\n          className={clsx(\n            classes.chip,\n            (searchLabel\n              ? trend === SEARCH\n              : selectedTrend === trend ||\n                (selectedTrend === null && trend === TRENDING)) &&\n              classes.selectedChip,\n            trend === SEARCH && !searchLabel && classes.searchChip\n          )}\n          color=\"primary\"\n        />\n      ))}\n    </AppBar>\n  );\n};\n\nexport default TrendsPicker;\n","export default (theme) => ({\n  trendsContainer: {\n    transition: \"0.2s\",\n    background: \"#fff\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflowX: \"scroll\",\n    [theme.breakpoints.up(\"sm\")]: {\n      overflowX: \"unset\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    },\n  },\n  chip: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginLeft: 8,\n    fontWeight: \"800\",\n    marginBottom: 8,\n    fontSize: 16,\n    boxShadow:\n      \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12);\",\n  },\n  selectedChip: {\n    border: \"2px solid #1F4788\",\n    color: \"#1F4788\",\n  },\n  searchChip: {\n    \"& .MuiChip-label\": {\n      paddingLeft: \"unset\",\n    },\n  },\n});\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  AUTOCOMPLETE_LOADING,\n  AUTOCOMPLETE_RESPONSE,\n  CLEAR_AUTOCOMPLETE,\n} from \"../Constants/actionTypes\";\n\nexport const getAutocompleteSuggestions = (query) => {\n  const paramsWithKey = {\n    q: query,\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS.autocomplete}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: AUTOCOMPLETE_LOADING });\n    request.then(({ data }) => {\n      dispatch({\n        type: AUTOCOMPLETE_RESPONSE,\n        payload: { list: data.data, query },\n      });\n    });\n  };\n};\n\nexport const clearAutocomplete = () => (dispatch) =>\n  dispatch({ type: CLEAR_AUTOCOMPLETE });\n","export const GIF_LIST_LOADING = \"GIF_LIST_LOADING\";\nexport const GIF_LIST_RESPONSE = \"GIF_LIST_RESPONSE\";\nexport const GIF_LIST_FAILURE = \"GIF_LIST_FAILURE\";\nexport const CLEAR_GIF_LIST = \"CLEAR_GIF_LIST\";\nexport const TRENDS_LIST_LOADING = \"TRENDS_LIST_LOADING\";\nexport const TRENDS_LIST_RESPONSE = \"TRENDS_LIST_RESPONSE\";\nexport const TRENDS_LIST_FAILURE = \"TRENDS_LIST_FAILURE\";\nexport const AUTOCOMPLETE_LOADING = \"AUTOCOMPLETE_LOADING\";\nexport const AUTOCOMPLETE_RESPONSE = \"AUTOCOMPLETE_RESPONSE\";\nexport const AUTOCOMPLETE_FAILURE = \"AUTOCOMPLETE_FAILURE\";\nexport const CLEAR_AUTOCOMPLETE = \"CLEAR_AUTOCOMPLETE\";\n","import React, { useEffect } from \"react\";\nimport {\n  Dialog,\n  Input,\n  DialogContent,\n  CircularProgress,\n  List,\n  ListItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  getAutocompleteSuggestions,\n  clearAutocomplete,\n} from \"../Actions/autocomplete_actions\";\nimport { useDebounce } from \"../utils\";\n\nimport styles from \"../Styles/search.style\";\nimport { SEARCH_PLACEHOLDER } from \"../Constants/strings\";\n\nconst useStyles = makeStyles(styles);\n\nconst SearchDialog = (props) => {\n  const classes = useStyles();\n  const suggestions = useSelector((store) => store.autocomplete);\n  const dispatch = useDispatch();\n  const { config, setSearch } = props;\n  const debouncedKey = useDebounce(config.key, 500);\n\n  useEffect(() => {\n    dispatch(\n      (debouncedKey === \"\" ? clearAutocomplete : getAutocompleteSuggestions)(\n        debouncedKey || undefined\n      )\n    );\n  }, [dispatch, debouncedKey]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearch((s) => ({\n      ...s,\n      dialogOpen: false,\n      searchMode: true,\n    }));\n  };\n  const onOptionClick = (option) => () => {\n    setSearch({\n      key: option,\n      dialogOpen: false,\n      searchMode: true,\n    });\n  };\n  return (\n    <Dialog\n      open={config.dialogOpen}\n      onClose={() =>\n        setSearch((s) => ({\n          ...s,\n          dialogOpen: false,\n        }))\n      }\n    >\n      <DialogContent className={classes.dialog}>\n        <form onSubmit={handleSubmit}>\n          <Input\n            placeholder={SEARCH_PLACEHOLDER}\n            value={config.key}\n            variant=\"outlined\"\n            autoFocus\n            className={classes.searchField}\n            onChange={(e) => {\n              e.persist();\n              setSearch((s) => ({ ...s, key: e.target.value }));\n            }}\n            endAdornment={\n              <IconButton type=\"submit\">\n                <SearchIcon />\n              </IconButton>\n            }\n          />\n          {suggestions.loading ? (\n            <CircularProgress size={40} className={classes.loader} />\n          ) : null}\n          {config.key && suggestions.query === config.key && (\n            <List className={classes.list}>\n              {[{ name: config.key }, ...suggestions.list].map(({ name }) => (\n                <ListItem\n                  key={name}\n                  button\n                  divider\n                  onClick={onOptionClick(name)}\n                  className={classes.suggestion}\n                >\n                  <SearchIcon className={classes.searchIcon} />\n                  {name}\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default SearchDialog;\n","export default () => ({\n  dialog: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  searchField: {\n    width: \"100%\",\n    minWidth: 275,\n    fontWeight: \"bold\",\n  },\n  loader: {\n    marginTop: 16,\n  },\n  list: {\n    width: \"100%\",\n  },\n  suggestion: {\n    display: \"flex\",\n    jfd: \"row\",\n    alignItems: \"center\",\n  },\n  searchIcon: {\n    marginRight: 8,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  CircularProgress,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport { Img } from \"react-image\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n// import WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport FileDownload from \"js-file-download\";\nimport Axios from \"axios\";\nimport { SOURCE, DOWNLOAD } from \"../Constants/strings\";\n\n// eslint-disable-next-line\nconst mediaRegex = \"/media/\\d.giphy.com/g\";\n\nconst ImageDialog = (props) => {\n  const [downloadDisabled, setDownloadDisable] = useState(false);\n  const { classes, imageData, open, setDialog } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setDialog((s) => ({ ...s, open: false }))}\n    >\n      {imageData && (\n        <>\n          <Img\n            src={imageData.images.original.url}\n            loader={<CircularProgress style={{ margin: \"12px auto\" }} />}\n            className={classes.dialogImage}\n          />\n          <DialogTitle>{imageData.title}</DialogTitle>\n          <DialogContent>\n            {imageData.source_tld && (\n              <DialogContentText>{`${SOURCE}: ${imageData.source_tld}`}</DialogContentText>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              startIcon={<GetAppIcon />}\n              disabled={downloadDisabled}\n              onClick={() => {\n                setDownloadDisable(true);\n                const request = Axios({\n                  url: `https://i.giphy.com/media${\n                    imageData.images.original.url.split(\".giphy.com/media\")[1]\n                  }`,\n                  method: \"GET\",\n                  responseType: \"blob\",\n                });\n                request.then((response) => {\n                  FileDownload(response.data, `${imageData.id}.gif`);\n                  setDownloadDisable(false);\n                });\n              }}\n            >\n              {`${DOWNLOAD}${downloadDisabled ? \"ing\" : \"\"}`}\n            </Button>\n            {/* <Button startIcon={<WhatsAppIcon />}>{WHATSAPP}</Button> */}\n          </DialogActions>\n        </>\n      )}\n    </Dialog>\n  );\n};\n\nexport default ImageDialog;\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport ListImage from \"./ListImage\";\nimport Header from \"./Header\";\nimport { useInfiniteScroll, makeImageColumns, useWindowSize } from \"../utils\";\nimport { getGifList, clearGifList } from \"../Actions/gifList_actions\";\nimport { getTrendsList } from \"../Actions/trends_actions\";\nimport { LIST_LIMIT } from \"../Constants/numeric\";\nimport styles from \"../Styles/HomePage.style\";\nimport TrendsPicker from \"./TrendsPicker\";\nimport SearchDialog from \"./SearchDialog\";\nimport ImageDialog from \"./ImageDialog\";\n\nconst useStyles = makeStyles(styles);\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  const gifList = useSelector((store) => store.gifList);\n  const dispatch = useDispatch();\n\n  const [selectedTrend, setTrend] = useState(null);\n  const [pageNum, setPage] = useState(0);\n\n  const BottomBorderRef = useRef(null);\n  useInfiniteScroll(BottomBorderRef, 0, setPage);\n\n  const { width } = useWindowSize();\n  // number of columns is floor value 90% of width divided by min column width, max value 6\n  const columnCount = Math.min(Math.floor((width * 0.9) / 162), 6);\n  const columns = useMemo(\n    () =>\n      makeImageColumns(\n        gifList.list,\n        \"images.fixed_width_downsampled.height\",\n        columnCount\n      ),\n    [gifList.list, columnCount]\n  );\n\n  const [search, setSearch] = useState({\n    key: \"\",\n    dialogOpen: false,\n    searchMode: false,\n  });\n\n  const [imageDialog, setDialog] = useState({\n    imageData: null,\n    open: false,\n  });\n\n  useEffect(() => {\n    dispatch(getTrendsList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(clearGifList());\n    setPage(0);\n  }, [dispatch, selectedTrend, search.searchMode]);\n\n  useEffect(() => {\n    dispatch(\n      getGifList(selectedTrend || search.searchMode ? \"search\" : \"trending\", {\n        limit: LIST_LIMIT,\n        offset: pageNum * LIST_LIMIT,\n        ...(selectedTrend && { q: selectedTrend }),\n        ...(search.searchMode && { q: search.key }),\n      })\n    );\n    // eslint-disable-next-line\n  }, [dispatch, selectedTrend, pageNum, search.searchMode]);\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <TrendsPicker\n        selectedTrend={selectedTrend}\n        setTrend={setTrend}\n        setSearch={setSearch}\n        searchLabel={search.searchMode ? search.key : \"\"}\n      />\n      <div className={classes.masonryContainer}>\n        <div className={classes.masonry}>\n          {columns.map((column, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <div className={classes.column} key={`column${index}`}>\n              {column.list.map((imageData) => (\n                <div className={classes.brick} key={imageData.id}>\n                  <ListImage\n                    classes={classes}\n                    imageData={imageData}\n                    setDialog={setDialog}\n                  />\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      <CircularProgress\n        ref={BottomBorderRef}\n        className={clsx(classes.loader, !gifList.loading && classes.invisible)}\n      />\n      <SearchDialog config={search} setSearch={setSearch} />\n      <ImageDialog\n        imageData={imageDialog.imageData}\n        open={imageDialog.open}\n        setDialog={setDialog}\n        classes={classes}\n      />\n    </div>\n  );\n};\n\nexport default HomePage;\n","export default () => ({\n  root: {\n    width: \"100vw\",\n    minHeight: \"calc(100vh - 96px)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  dialogImage: {\n    width: \"100%\",\n  },\n  masonryContainer: {\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  masonry: {\n    width: \"90%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"stretch\",\n  },\n  column: {\n    minWidth: 150,\n    marginRight: 12,\n    flexGrow: 1,\n    \"&:last-child\": {\n      marginRight: \"unset\",\n    },\n  },\n  brick: {\n    margin: \"12px 0\",\n    width: \"100%\",\n  },\n  listImage: {\n    width: \"100%\",\n    borderRadius: 3,\n  },\n  loader: {\n    margin: \"0 auto\",\n  },\n  invisible: {\n    opacity: 1,\n  },\n});\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  TRENDS_LIST_LOADING,\n  TRENDS_LIST_RESPONSE,\n} from \"../Constants/actionTypes\";\n\nexport const getTrendsList = () => {\n  const paramsWithKey = {\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS.trends}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: TRENDS_LIST_LOADING });\n    request.then(({ data }) => {\n      dispatch({ type: TRENDS_LIST_RESPONSE, payload: data });\n    });\n  };\n};\n\nexport const a = \"\";\n","import Axios from \"axios\";\nimport { BASE_URL, API_KEY, ENDPOINTS } from \"../Constants/apiConstants\";\nimport { makeQueryString } from \"../utils\";\nimport {\n  GIF_LIST_LOADING,\n  GIF_LIST_RESPONSE,\n  CLEAR_GIF_LIST,\n} from \"../Constants/actionTypes\";\n\nexport const getGifList = (endpointKey, params) => {\n  const paramsWithKey = {\n    ...params,\n    api_key: API_KEY,\n  };\n  const request = Axios.get(\n    `${BASE_URL}${ENDPOINTS[endpointKey]}?${makeQueryString(paramsWithKey)}`\n  );\n  return (dispatch) => {\n    dispatch({ type: GIF_LIST_LOADING });\n    request.then(({ data }) => {\n      dispatch({ type: GIF_LIST_RESPONSE, payload: data });\n    });\n  };\n};\n\nexport const clearGifList = () => (dispatch) =>\n  dispatch({ type: CLEAR_GIF_LIST });\n","export const LIST_LIMIT = 10;\nexport const a = \"\";\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./Components/HomePage\";\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import {\n  GIF_LIST_LOADING,\n  GIF_LIST_RESPONSE,\n  CLEAR_GIF_LIST,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n  pagination: {},\n};\n\nconst gifListReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case GIF_LIST_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GIF_LIST_RESPONSE:\n      return {\n        loading: false,\n        list: [...state.list, ...payload.data],\n        pagination: payload.pagination,\n      };\n    case CLEAR_GIF_LIST:\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gifListReducer;\n","import {\n  TRENDS_LIST_LOADING,\n  TRENDS_LIST_RESPONSE,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n};\n\nconst trendsReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case TRENDS_LIST_LOADING:\n      return {\n        loading: true,\n        list: [],\n      };\n    case TRENDS_LIST_RESPONSE:\n      return {\n        loading: false,\n        list: payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trendsReducer;\n","import {\n  AUTOCOMPLETE_LOADING,\n  AUTOCOMPLETE_RESPONSE,\n  CLEAR_AUTOCOMPLETE,\n} from \"../Constants/actionTypes\";\n\nconst INITIAL_STATE = {\n  loading: false,\n  list: [],\n  query: \"\",\n};\n\nconst autompleteReducer = (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case AUTOCOMPLETE_LOADING:\n      return {\n        ...state,\n        loading: true,\n        list: [],\n      };\n    case AUTOCOMPLETE_RESPONSE:\n      return {\n        loading: false,\n        list: payload.list,\n        query: payload.query,\n      };\n    case CLEAR_AUTOCOMPLETE:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default autompleteReducer;\n","import { combineReducers } from \"redux\";\nimport gifListReducer from \"./gifList_reducer\";\nimport trendsReducer from \"./trendsList_reducer\";\nimport autocompleteReducer from \"./autocomplete_reducer\";\n\nexport default combineReducers({\n  gifList: gifListReducer,\n  trends: trendsReducer,\n  autocomplete: autocompleteReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport themeConfig from \"./Styles/themeConfig\";\nimport Routes from \"./routes\";\nimport combinedReducer from \"./Reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combinedReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nconst theme = createMuiTheme(themeConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}